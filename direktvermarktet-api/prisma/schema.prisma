// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Location {
  id            String     @id @default(uuid())
  street        String
  houseNumber   String     @map("house_number")
  postalCode    String     @map("postal_code")
  city          String
  country       Country
  googleMapsUrl String?    @map("google_maps_url")
  Farm          Farm[]
  FarmShop      FarmShop[]

  @@map("locations")
}

model Image {
  id              String     @id @default(uuid())
  path            String     @db.VarChar(1024)
  Farm            Farm[]
  FarmPreview     Farm?      @relation("farm_preview_image")
  FarmShopPreview FarmShop?  @relation("farm_shop_preview_image")
  FarmShop        FarmShop[]
  FarmAvatar      Farm?      @relation("farm_avatar_image")
  FarmShopAvatar  FarmShop?  @relation("farm_shop_avatar_image")

  @@map("images")
}

model OpeningHour {
  id          String    @id @default(uuid())
  dayOfWeek   Int       @map("day_of_week")
  openTime    String    @map("open_time")
  closeTime   String    @map("close_time")
  SalesMode   SalesMode @relation(fields: [salesModeId], references: [id])
  salesModeId String    @map("sales_mode_id")

  @@map("opening_hours")
}

model Farm {
  id             String     @id @default(uuid())
  name           String
  slogan         String
  description    String     @db.VarChar(2000)
  url            String?    @unique
  location       Location   @relation(fields: [locationId], references: [id])
  locationId     String     @unique @map("location_id")
  previewImage   Image?     @relation("farm_preview_image", fields: [previewImageId], references: [id])
  previewImageId String?    @unique @map("preview_image_id")
  avatarImage    Image?     @relation("farm_avatar_image", fields: [avatarImageId], references: [id])
  avatarImageId  String?    @unique @map("avatar_image_id")
  images         Image[]
  shops          FarmShop[]

  @@map("farms")
}

model FarmShop {
  id             String      @id @default(uuid())
  name           String
  slogan         String
  description    String      @db.VarChar(2000)
  url            String?     @unique
  location       Location    @relation(fields: [locationId], references: [id])
  locationId     String      @unique @map("location_id")
  previewImage   Image?      @relation("farm_shop_preview_image", fields: [previewImageId], references: [id])
  previewImageId String?     @unique @map("preview_image_id")
  avatarImage    Image?      @relation("farm_shop_avatar_image", fields: [avatarImageId], references: [id])
  avatarImageId  String?     @unique @map("avatar_image_id")
  images         Image[]
  salesModes     SalesMode[]
  Farm           Farm        @relation(fields: [farmId], references: [id])
  farmId         String      @map("farm_id")
  products       String      @db.VarChar(1024)

  @@map("farm_shops")
}

model SalesMode {
  id           String        @id @default(uuid())
  isAlwaysOpen Boolean       @map("is_always_open")
  fallback     String?
  FarmShop     FarmShop      @relation(fields: [farmShopId], references: [id])
  farmShopId   String        @map("farm_shop_id")
  openingHours OpeningHour[]

  @@map("sales_modes")
}

enum Country {
  GERMANY
}
